// @ts-nocheck
export default class PDF{static async generate(e,t={elementsToNotDisplay:null,format:"WEBP",title:document.title}){try{await import("../plugins/html2canvas.min.js"),await import("../plugins/jspdf.umd.min.js");const{jsPDF:n}=window.jspdf,o=new n;t.elementsToNotDisplay&&t.elementsToNotDisplay.forEach((e=>e.style.display="none"));const a={};for(let t=0;t<e.style.length;t++){const n=e.style[t];a[n]=e.style[n]}e.style.backgroundColor="none",e.style.backgroundImage="none",e.style.boxShadow="none";const s=(await html2canvas(e)).toDataURL(e,`image/${t.format?.toLowerCase()??"webp"}`);o.addImage(s,t.format??"WEBP",0,0),o.save(`${t.title??document.title}.pdf`);for(const t in a)e.style[t]=a[t];t.elementsToNotDisplay&&t.elementsToNotDisplay.forEach((e=>e.style.display=""))}catch(t){console.error(t);const n=document.createElement("span");n.textContent="Impossible d'exporter le contenu en PDF",e.append(n)}}static async createButton(e,t,n={position:"before",buttonText:"PDF ⭳",format:"WEBP",title:document.title}){if(!e)throw new Error("L'élément référent ne peut pas être vide. Vérifier que votre élément existe ou est bien créé avant son appel.");if(!t)throw new Error("Le contenu ne peut pas être vide. Vérifier que votre élément existe ou est bien créé avant son appel.");n.title=n?.title?.replace(/[^a-zA-Z0-9À-ÿ\ ]+/g,"-")??document.title;const o=document.createElement("button");o.innerHTML=n.buttonText??"PDF ⭳",o.title=n.title,o.type="button",delete n.buttonText;const a={before:"beforebegin",start:"afterbegin",end:"beforeend",after:"afterend"}[n.position??"before"]||"beforebegin";delete n.position,o.addEventListener("click",(async()=>await PDF.generate(t,n))),e.insertAdjacentElement(a,o)}}